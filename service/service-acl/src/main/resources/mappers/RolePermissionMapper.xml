<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.atguigu.mapper.RolePermissionMapper">
    <select id="findPermissionIdListByRoleId" resultType="long">
        select permission_id from acl_role_permission
        where role_id=#{roleId} and is_deleted=0
    </select>

    <sql id="columns">
    select id,role_id,permission_id,create_time,update_time,is_deleted
</sql>
    <select id="findByRoleIdAndPermissionId" resultType="RolePermission">
        <include refid="columns"></include>
        from acl_role_permission
        where role_id=#{roleId} and permission_id=#{permissionId}
    </select>
    <update id="removeRolePermission">
        update acl_role_permission
        set is_deleted=1
        where role_id=#{roleId}
        and permission_id in
        (
        <foreach collection="removePermissionIdList" item="permissionId" separator=",">
            #{permissionId}
        </foreach>
        )
    </update>

    <update id="update">
        update acl_role_permission
        <set>
            <if test="roleId != null and roleId != ''">
                role_id=#{roleId},
            </if>
            <if test="permissionId != null and permissionId != ''">
                permission_id=#{permissionId},
            </if>
            <if test="isDeleted != null and isDeleted != '' or isDeleted == 0">
                is_deleted=#{isDeleted},
            </if>
            update_time=now()
        </set>
        where id=#{id}
    </update>

    <insert id="insert">
    insert into acl_role_permission (id,role_id,permission_id)
    values (#{id},#{roleId},#{permissionId})
</insert>
</mapper>